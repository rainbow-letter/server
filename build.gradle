plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.rainbowletter'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'

    // REST CLIENT
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3.1'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // LOG
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'

    // TEST
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'io.rest-assured:rest-assured:5.3.2'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

def generated = 'src/main/generated'

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

tasks.named('clean') {
    delete file(generated)
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    delete file('src/main/resources/static/docs')
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    baseDirFollowsSourceFile()
    dependsOn test
}

tasks.register('copyDocument', Copy) {
    from file('build/docs/asciidoc')
    into file('src/main/resources/static/docs')
    dependsOn asciidoctor
}

build {
    dependsOn copyDocument
}

bootJar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from("${asciidoctor.outputDir}") {
        into 'BOOT-INF/classes/static'
    }
    dependsOn copyDocument
}
